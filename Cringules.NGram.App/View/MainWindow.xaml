<Window x:Class="Cringules.NGram.App.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Cringules.NGram.App.View"
        xmlns:vm="clr-namespace:Cringules.NGram.App.ViewModel"
        xmlns:res="clr-namespace:Cringules.NGram.App.Resources"
        xmlns:export="clr-namespace:Cringules.NGram.App.Export"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:conv="clr-namespace:NKristek.Wpf.Converters;assembly=NKristek.Wpf.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200" MinHeight="600" MinWidth="800">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <conv:BoolToInverseBoolConverter x:Key="InverseBoolConverter" />
        <conv:ValueNullToVisibilityConverter x:Key="NullVisibilityConverter" />
        <conv:ValueNullToInverseVisibilityConverter x:Key="InverseNullVisibilityConverter" />
        <export:PdfResultExporter x:Key="PdfResultExporter" />
        <export:EmfResultExporter x:Key="EmfResultExporter" />
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static res:Strings.File}">
                <MenuItem Header="{x:Static res:Strings.ImportData}"
                          Command="{Binding ImportDataCommand}" />
                <MenuItem Header="{x:Static res:Strings.Open}"
                          Command="{Binding OpenSessionCommand}" />
                <MenuItem Header="{x:Static res:Strings.Close}"
                          Command="{Binding CloseSessionCommand}" />
                <MenuItem Header="{x:Static res:Strings.Save}"
                          Command="{Binding SaveSessionCommand}" />
                <MenuItem Header="{x:Static res:Strings.SaveAs}"
                          Command="{Binding SaveSessionAsCommand}" />
                <MenuItem Header="{x:Static res:Strings.ExportAs}">
                    <MenuItem Header="E_xcel" />
                    <MenuItem Header="_PDF" Command="{Binding ExportAsCommand}"
                              CommandParameter="{StaticResource PdfResultExporter}" />
                    <MenuItem Header="E_MF" Command="{Binding ExportAsCommand}"
                              CommandParameter="{StaticResource EmfResultExporter}" />
                    <MenuItem Header="E_PS" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static res:Strings.Analysis}"
                      DataContext="{Binding Session}">
                <MenuItem Header="{x:Static res:Strings.StartAnalysis}"
                          Command="{Binding StartAnalysisCommand}" />
            </MenuItem>
        </Menu>
        <Grid>
            <Grid Visibility="{Binding Session, Converter={StaticResource NullVisibilityConverter}}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="500">
                    <TextBlock Text="{x:Static res:Strings.Welcome}" FontSize="25" TextWrapping="Wrap"
                               TextAlignment="Center" />
                    <Grid Height="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button Content="{x:Static res:Strings.ImportData}"
                                Command="{Binding ImportDataCommand}" Margin="5" />
                        <Button Grid.Column="1" Content="{x:Static res:Strings.Open}"
                                Command="{Binding OpenSessionCommand}" Margin="5" />
                    </Grid>
                </StackPanel>
            </Grid>
            <Grid DataContext="{Binding Session}"
                  Visibility="{Binding ., Converter={StaticResource InverseNullVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <oxy:PlotView Grid.Row="0" Grid.Column="0" Model="{Binding Model}"
                              Controller="{Binding PlotController}" />
                <DataGrid Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Peaks}" SelectedItem="{Binding SelectedPeak}" />
                <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="5">
                    <Expander Header="{x:Static res:Strings.WaveLength}">
                        <StackPanel>
                            <TextBlock
                                Text="{Binding WaveLength, StringFormat={x:Static res:Strings.SelectedWaveLength}}"
                                TextWrapping="Wrap" />
                            <Button Content="{x:Static res:Strings.Select}"
                                    Command="{Binding GetWaveLengthCommand}" />
                        </StackPanel>
                    </Expander>
                    <Button Content="{x:Static res:Strings.StartAnalysis}"
                            Command="{Binding StartAnalysisCommand}" Height="50" />
                    <Expander Header="{x:Static res:Strings.Cleanup}">
                        <StackPanel>
                            <CheckBox IsChecked="{Binding DetermineNoiseLevel, Mode=TwoWay}">
                                <TextBlock Text="{x:Static res:Strings.DetermineNoiseLevel}" TextWrapping="Wrap" />
                            </CheckBox>
                            <Label Content="{x:Static res:Strings.NoiseLevel}" />
                            <TextBox Text="{Binding NoiseLevel, Mode=TwoWay}"
                                     IsEnabled="{Binding DetermineNoiseLevel, Converter={StaticResource InverseBoolConverter}}" />
                        </StackPanel>
                    </Expander>
                    <Expander Header="{x:Static res:Strings.Peaks}">
                        <StackPanel>
                            <Button Content="{x:Static res:Strings.AddPeak}" />
                        </StackPanel>
                    </Expander>
                    <Expander Header="{x:Static res:Strings.PeakApproximation}">
                        <StackPanel>
                            <CheckBox>
                                <TextBlock Text="{x:Static res:Strings.DetermineApproximationFunction}"
                                           TextWrapping="Wrap" />
                            </CheckBox>
                            <Label Content="{x:Static res:Strings.ApproximationFunction}" />
                            <ComboBox>
                                <ComboBoxItem Content="{x:Static res:Strings.Gaussian}" />
                                <ComboBoxItem Content="{x:Static res:Strings.Lorentzian}" />
                                <ComboBoxItem Content="{x:Static res:Strings.Cauchy}" />
                            </ComboBox>
                            <Label Content="{x:Static res:Strings.Coefficients}" />
                            <TextBox />
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
